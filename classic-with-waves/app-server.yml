# **NOTE**: this file is generated by `dhall-render`.
# You should NOT edit it manually, your changes will be lost.

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    sidecar.istio.io/inject: 'true'
    strategy.spinnaker.io/replace: 'true'
  labels:
    app.kubernetes.io/name: classic
    app.kubernetes.io/version: zenspider-70-999-d85f0ce4
    product: support
    project: classic
    role: app-server
    role_group: app-server
    sidecar.istio.io/inject: 'true'
    team: classic-operations
  name: classic-app-server
  namespace: classic
spec:
  progressDeadlineSeconds: 600
  replicas: 6
  selector:
    matchLabels:
      project: classic
      role: app-server
  strategy:
    rollingUpdate:
      maxSurge: 10
      maxUnavailable: 10%
  template:
    metadata:
      annotations:
        container-classic-init-samson/dockerfile: none
        container-raingutter-samson/dockerfile: none
        container-raingutter-samson/preStop: disabled
        proxy.istio.io/config: |-
          terminationDrainDuration: 55s
          concurrency: 2
        sidecar.istio.io/inject: 'true'
        sidecar.istio.io/logLevel: warning
        sidecar.istio.io/proxyCPU: 275m
        sidecar.istio.io/proxyCPULimit: '4'
        sidecar.istio.io/proxyMemory: 275Mi
        sidecar.istio.io/proxyMemoryLimit: 2Gi
        storage.zende.sk/credential-routes: '{"mount": "/tempauth_secrets"}'
        traffic.sidecar.istio.io/excludeOutboundIPRanges: 172.29.9.251/32
        traffic.sidecar.istio.io/includeOutboundIPRanges: 10.0.0.0/8,172.16.0.0/12,240.240.0.0/16
      labels:
        app.kubernetes.io/name: classic
        app.kubernetes.io/version: zenspider-70-999-d85f0ce4
        configuration-delivery: 'true'
        descheduler.compute.zende.sk/opt-in: 'true'
        opa-gatekeeper.zendesk.com/run-as-non-root: 'false'
        product: support
        project: classic
        role: app-server
        role_group: app-server
        secret-service.zende.sk/sidecar: sidecar
        sidecar.istio.io/inject: 'true'
        team: classic-operations
        temp-auth: enabled
      name: classic-app-server
    spec:
      containers:
      - args:
        - bin/app-server
        command:
        - script/docker-boot
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: REVISION
          value: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        - name: TAG
          value: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        - name: DEPLOY_GROUP
          value: staging998
        - name: PROJECT
          value: classic
        - name: ROLE
          value: app-server
        - name: VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/version']
        - name: MYSQL_READ_TIMEOUT
          value: '59'
        - name: MYSQL_MAX_EXECUTION_TIME
          value: '8'
        - name: REQUEST_EXECUTION_TIMEOUT
          value: '25'
        - name: REQUEST_MAX_EXECUTION_TIME
          value: '59'
        - name: ENABLE_QUERY_KILLER
          value: 'true'
        - name: BUNDLE_GEMFILE
          value: Gemfile.next
        - name: REPLICA_UPPER_BOUND
          value: '12'
        - name: ISTIO_STATUS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.annotations['sidecar.istio.io/status']
        envFrom:
        - configMapRef:
            name: classic-env-d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        image: 713408432298.dkr.ecr.us-west-2.amazonaws.com/dev/zendesk/zendesk/app@sha256:11b691cdc24ac51cf2036140f9b69e3e8c3ee59d19114e7805142de5d8c28ab4
        lifecycle:
          preStop:
            exec:
              command:
              - sleep
              - '31'
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: "/z/ping"
            port: 4080
          timeoutSeconds: 120
        name: unicorn
        ports:
        - containerPort: 4080
          name: main-port
          protocol: TCP
        readinessProbe:
          failureThreshold: 20
          httpGet:
            path: "/z/ping"
            port: 4080
          successThreshold: 2
          timeoutSeconds: 10
        resources:
          limits:
            cpu: '25.0'
            memory: 40G
          requests:
            cpu: '12.0'
            memory: 40G
        startupProbe:
          failureThreshold: 50
          httpGet:
            path: "/z/ping"
            port: 4080
          initialDelaySeconds: 25
          periodSeconds: 3
          timeoutSeconds: 3
        volumeMounts:
        - mountPath: "/app/config/networks.d"
          name: network-config
        - mountPath: "/app/config/radar.d"
          name: radar
        - mountPath: "/app/config/attachments.d"
          name: attachments
        - mountPath: "/tmp"
          name: tmp
      - env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: REVISION
          value: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        - name: TAG
          value: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        - name: DEPLOY_GROUP
          value: staging998
        - name: PROJECT
          value: classic
        - name: ROLE
          value: app-server
        - name: VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/version']
        - name: RG_USE_SOCKET_STATS
          value: 'true'
        - name: RG_SERVER_PORT
          value: '4080'
        - name: RG_STATSD_HOST
          value: 169.254.1.1
        - name: RG_STATSD_PORT
          value: '8125'
        - name: RG_FREQUENCY
          value: '500'
        - name: RG_STATSD_NAMESPACE
          value: zendesk.unicorn.raindrops.agg.
        - name: RG_STATSD_EXTRA_TAGS
          value: kube_role:app-server
        - name: UNICORN_WORKERS
          value: '25'
        - name: ISTIO_STATUS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.annotations['sidecar.istio.io/status']
        image: 713408432298.dkr.ecr.us-west-2.amazonaws.com/prod/zendesk/zendesk_raingutter@sha256:0e045d50d7ff628f8483fe62f2c589c1554aa9c428808e9140b932db319221e8
        name: raingutter
        resources:
          limits:
            cpu: '1.0'
            memory: 100M
          requests:
            cpu: 100m
            memory: 100M
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      dnsConfig:
        options:
        - name: single-request-reopen
        - name: ndots
          value: '2'
      initContainers:
      - command:
        - script/classic-init-container.sh
        image: 713408432298.dkr.ecr.us-west-2.amazonaws.com/dev/zendesk/zendesk/app@sha256:11b691cdc24ac51cf2036140f9b69e3e8c3ee59d19114e7805142de5d8c28ab4
        name: classic-init
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: "/app/config/networks.d"
          name: network-config
        - mountPath: "/app/config/radar.d"
          name: radar
        - mountPath: "/app/config/attachments.d"
          name: attachments
        - mountPath: "/tmp"
          name: tmp
      nodeSelector:
        node-type: node-arm
      terminationGracePeriodSeconds: 50
      tolerations:
      - effect: NoSchedule
        key: compute.zende.sk/nodegroup
        value: node-arm
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/version: zenspider-70-999-d85f0ce4
            project: classic
            role: app-server
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
      volumes:
      - configMap:
          name: networks
        name: network-config
      - configMap:
          name: radar
        name: radar
      - configMap:
          name: attachments
        name: attachments
      - emptyDir: {}
        name: tmp
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    samson/persistent_fields: metadata.labels.proxy
  labels:
    app.kubernetes.io/name: classic
    app.kubernetes.io/version: zenspider-70-999-d85f0ce4
    kube-service-watcher/namespace_suffix: 'false'
    product: support
    project: classic
    role: app-server
    team: support
  name: classic
  namespace: classic
spec:
  ports:
  - name: http
    port: 80
    targetPort: main-port
  selector:
    project: classic
    role: app-server
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    product: support
    project: classic
    role: app-server
    role_group: app-server-hpa
    team: support
  name: classic-app-server-hpa
  namespace: classic
spec:
  maxReplicas: 12
  metrics:
  - containerResource:
      container: unicorn
      name: cpu
      target:
        averageUtilization: 105
        type: Utilization
    type: ContainerResource
  - external:
      metric:
        name: zendesk.unicorn.raindrops.agg.active.max
        selector:
          matchLabels:
            kube_cluster: pod998
            pod_namespace: classic
            project: classic
      target:
        type: Value
        value: '18'
    type: External
  - containerResource:
      container: istio-proxy
      name: cpu
      target:
        averageValue: '3'
        type: AverageValue
    type: ContainerResource
  - containerResource:
      container: istio-proxy
      name: memory
      target:
        averageValue: 1536Mi
        type: AverageValue
    type: ContainerResource
  minReplicas: 6
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: classic-app-server
---
apiVersion: compute.zende.sk/v1alpha1
kind: CronScaler
metadata:
  labels:
    product: support
    project: classic
    role: app-server-cron-scaler
    role_group: app-server
    team: support
  name: classic-app-server-cronscaler
  namespace: classic
spec:
  steps:
  - maxReplicas: 12
    minReplicas: 3
    runAt: 0 2 * * 2-6
  - maxReplicas: 12
    minReplicas: 6
    runAt: 0 10 * * 1-5
  target:
    apiVersion: autoscaling/v2
    kind: HorizontalPodAutoscaler
    name: classic-app-server-hpa
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    product: support
    project: classic
    role: app-server
    team: support
  name: classic-app-server
  namespace: classic
spec:
  maxUnavailable: 10%
  selector:
    matchLabels:
      project: classic
      role: app-server

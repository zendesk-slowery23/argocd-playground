apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    ad.datadoghq.com/tags: '{"git.commit.sha":"d85f0ce4f0185f4971afecf68dc7318f4ea128ca","git.repository_url":"github.com/zendesk/zendesk","team":"classic-core"}'
    cicd-toolkit.zende.sk/environment: staging
    cicd-toolkit.zende.sk/generated-by: jsonnet-kubernetes
    cicd-toolkit.zende.sk/partition: pod998
    cicd-toolkit.zende.sk/phase: phase0
    cicd-toolkit.zende.sk/role: capacitytesting-app-server
    cicd-toolkit.zende.sk/version: v8.428.0
    moniker.spinnaker.io/cluster: pod998
    moniker.spinnaker.io/detail: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
    moniker.spinnaker.io/stack: classic-capacitytesting-app-server
    sidecar.istio.io/inject: "true"
    sidecar.istio.io/proxyCPU: 275m
    sidecar.istio.io/proxyCPULimit: "4"
    sidecar.istio.io/proxyMemory: 200Mi
    sidecar.istio.io/proxyMemoryLimit: 2Gi
    strategy.spinnaker.io/replace: "true"
  labels:
    app.kubernetes.io/component: capacitytesting-app-server
    app.kubernetes.io/instance: capacitytesting-app-server
    app.kubernetes.io/name: classic-capacitytesting-app-server
    app.kubernetes.io/part-of: support
    app.kubernetes.io/version: zenspider-70-999-d85f0ce4
    branch: unknown
    cicd-toolkit.zende.sk/pipeline: ${ execution.name }
    criticality-tier: tier0
    deploy_id: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
    product: support
    project: classic
    role: capacitytesting-app-server
    role_group: app-server
    service.istio.io/canonical-name: classic-capacitytesting-app-server
    sidecar.istio.io/inject: "true"
    tags.datadoghq.com/env: staging
    tags.datadoghq.com/istio-proxy.env: staging
    tags.datadoghq.com/istio-proxy.service: classic-capacitytesting-app-server
    tags.datadoghq.com/istio-proxy.version: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
    tags.datadoghq.com/service: classic-capacitytesting-app-server
    tags.datadoghq.com/version: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
    team: classic-operations
    track: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
    version: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
  name: classic-capacitytesting-app-server
  namespace: classic
spec:
  minReadySeconds: 10
  progressDeadlineSeconds: 600
  replicas: 0
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      project: classic
      role: capacitytesting-app-server
  strategy:
    rollingUpdate:
      maxSurge: 10
      maxUnavailable: 10%
  template:
    metadata:
      annotations:
        ad.datadoghq.com/tags: '{"git.commit.sha":"d85f0ce4f0185f4971afecf68dc7318f4ea128ca","git.repository_url":"github.com/zendesk/zendesk","team":"classic-core"}'
        cicd-toolkit.zende.sk/generated-by: jsonnet-kubernetes
        moniker.spinnaker.io/cluster: pod998
        moniker.spinnaker.io/detail: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        moniker.spinnaker.io/stack: classic-capacitytesting-app-server
        proxy.istio.io/config: |-
          proxyMetadata:
            DD_ENV: "staging"
            DD_SERVICE: "classic-capacitytesting-app-server"
            DD_VERSION: "d85f0ce4f0185f4971afecf68dc7318f4ea128ca"
          terminationDrainDuration: 55s
          concurrency: 2
        sidecar.istio.io/inject: "true"
        sidecar.istio.io/logLevel: warning
        sidecar.istio.io/proxyCPU: 275m
        sidecar.istio.io/proxyCPULimit: "4"
        sidecar.istio.io/proxyMemory: 200Mi
        sidecar.istio.io/proxyMemoryLimit: 2Gi
        storage.zende.sk/credential-routes: '{"mount": "/tempauth_secrets"}'
        temp-auth.zendesk.com/kafka-tls: "true"
        traffic.sidecar.istio.io/excludeOutboundIPRanges: 172.29.9.251/32
        traffic.sidecar.istio.io/includeOutboundIPRanges: 10.0.0.0/8,172.16.0.0/12,240.240.0.0/16
      labels:
        app.kubernetes.io/component: capacitytesting-app-server
        app.kubernetes.io/instance: capacitytesting-app-server
        app.kubernetes.io/name: classic-capacitytesting-app-server
        app.kubernetes.io/part-of: support
        app.kubernetes.io/version: zenspider-70-999-d85f0ce4
        branch: unknown
        cicd-toolkit.zende.sk/pipeline: ${ execution.name }
        configuration-delivery: "true"
        criticality-tier: tier0
        deploy_group: pod998
        deploy_id: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        deploy_phase: phase0
        descheduler.compute.zende.sk/opt-in: "true"
        opa-gatekeeper.zendesk.com/run-as-non-root: "false"
        product: support
        project: classic
        revision: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        role: capacitytesting-app-server
        role_group: app-server
        secret-service.zende.sk/sidecar: sidecar
        service.istio.io/canonical-name: classic-capacitytesting-app-server
        sidecar.istio.io/inject: "true"
        tag: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        tags.datadoghq.com/env: staging
        tags.datadoghq.com/istio-proxy.env: staging
        tags.datadoghq.com/istio-proxy.service: classic-capacitytesting-app-server
        tags.datadoghq.com/istio-proxy.version: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        tags.datadoghq.com/service: classic-capacitytesting-app-server
        tags.datadoghq.com/version: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        team: classic-operations
        temp-auth: enabled
        track: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        version: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
    spec:
      containers:
      - args:
        - bin/app-server
        command:
        - script/docker-boot
        env:
        - name: DD_ENV
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/env']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/service']
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/version']
        - name: DEPLOY_ID
          value: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PROJECT
          value: classic
        - name: REVISION
          value: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        - name: ROLE
          value: capacitytesting-app-server
        - name: TAG
          value: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        - name: MYSQL_READ_TIMEOUT
          value: "59"
        - name: MYSQL_MAX_EXECUTION_TIME
          value: "8"
        - name: REQUEST_EXECUTION_TIMEOUT
          value: "25"
        - name: REQUEST_MAX_EXECUTION_TIME
          value: "59"
        - name: ENABLE_QUERY_KILLER
          value: "true"
        - name: REPLICA_UPPER_BOUND
          value: "0"
        - name: ISTIO_STATUS
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['sidecar.istio.io/status']
        - name: VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/version']
        - name: BUNDLE_GEMFILE
          value: Gemfile.next
        envFrom:
        - configMapRef:
            name: classic-env-d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        image: 713408432298.dkr.ecr.us-west-2.amazonaws.com/dev/zendesk/zendesk/app@sha256:11b691cdc24ac51cf2036140f9b69e3e8c3ee59d19114e7805142de5d8c28ab4
        lifecycle:
          preStop:
            exec:
              command:
              - sleep
              - "31"
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /z/ping
            port: 4080
          initialDelaySeconds: 10
          periodSeconds: 15
          timeoutSeconds: 120
        name: unicorn
        ports:
        - containerPort: 4080
          name: main-port
        readinessProbe:
          failureThreshold: 20
          httpGet:
            path: /z/ping
            port: 4080
          initialDelaySeconds: 10
          periodSeconds: 15
          successThreshold: 2
          timeoutSeconds: 10
        resources:
          limits:
            cpu: "25.0"
            memory: 40G
          requests:
            cpu: "12.0"
            memory: 40G
        startupProbe:
          failureThreshold: 50
          httpGet:
            path: /z/ping
            port: 4080
          initialDelaySeconds: 25
          periodSeconds: 3
          timeoutSeconds: 3
        volumeMounts:
        - mountPath: /var/run/datadog
          name: dsdsocket
          readOnly: true
        - mountPath: /app/config/networks.d
          name: network-config
        - mountPath: /app/config/radar.d
          name: radar
        - mountPath: /app/config/attachments.d
          name: attachments
        - mountPath: /tmp
          name: tmp
      - env:
        - name: DD_ENV
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/env']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/service']
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/version']
        - name: DEPLOY_ID
          value: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PROJECT
          value: classic
        - name: REVISION
          value: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        - name: ROLE
          value: capacitytesting-app-server
        - name: TAG
          value: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        - name: RG_USE_SOCKET_STATS
          value: "true"
        - name: RG_SERVER_PORT
          value: "4080"
        - name: RG_STATSD_HOST
          value: 169.254.1.1
        - name: RG_STATSD_PORT
          value: "8125"
        - name: RG_FREQUENCY
          value: "500"
        - name: RG_STATSD_NAMESPACE
          value: classic_capacitytesting.unicorn.raindrops.agg.
        - name: RG_STATSD_EXTRA_TAGS
          value: kube_role:capacitytesting-app-server
        - name: UNICORN_WORKERS
          valueFrom:
            configMapKeyRef:
              key: UNICORN_WORKERS
              name: classic-env-d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        - name: ISTIO_STATUS
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['sidecar.istio.io/status']
        image: 713408432298.dkr.ecr.us-west-2.amazonaws.com/prod/zendesk/zendesk_raingutter@sha256:0e045d50d7ff628f8483fe62f2c589c1554aa9c428808e9140b932db319221e8
        name: raingutter
        resources:
          limits:
            cpu: "1.0"
            memory: 100M
          requests:
            cpu: 100m
            memory: 100M
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /var/run/datadog
          name: dsdsocket
          readOnly: true
      dnsConfig:
        options:
        - name: single-request-reopen
        - name: ndots
          value: "2"
      initContainers:
      - command:
        - script/classic-init-container.sh
        env:
        - name: DD_ENV
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/env']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/service']
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/version']
        - name: DEPLOY_ID
          value: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PROJECT
          value: classic
        - name: REVISION
          value: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        - name: ROLE
          value: capacitytesting-app-server
        - name: TAG
          value: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
        image: 713408432298.dkr.ecr.us-west-2.amazonaws.com/dev/zendesk/zendesk/app@sha256:11b691cdc24ac51cf2036140f9b69e3e8c3ee59d19114e7805142de5d8c28ab4
        name: classic-init
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /app/config/networks.d
          name: network-config
        - mountPath: /app/config/radar.d
          name: radar
        - mountPath: /app/config/attachments.d
          name: attachments
        - mountPath: /tmp
          name: tmp
      nodeSelector:
        node-type: node-arm
      priorityClassName: tier0
      terminationGracePeriodSeconds: 50
      tolerations:
      - effect: NoSchedule
        key: compute.zende.sk/nodegroup
        value: node-arm
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/version: zenspider-70-999-d85f0ce4
            project: classic
            role: capacitytesting-app-server
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
      volumes:
      - hostPath:
          path: /var/run/datadog
        name: dsdsocket
      - configMap:
          name: networks
        name: network-config
      - configMap:
          name: radar
        name: radar
      - configMap:
          name: attachments
        name: attachments
      - emptyDir: {}
        name: tmp
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    ad.datadoghq.com/tags: '{"git.commit.sha":"d85f0ce4f0185f4971afecf68dc7318f4ea128ca","git.repository_url":"github.com/zendesk/zendesk","team":"classic-core"}'
    cicd-toolkit.zende.sk/environment: staging
    cicd-toolkit.zende.sk/partition: pod998
    cicd-toolkit.zende.sk/phase: phase0
    cicd-toolkit.zende.sk/role: capacitytesting-app-server
    cicd-toolkit.zende.sk/version: v8.428.0
  labels:
    app.kubernetes.io/component: capacitytesting-app-server
    app.kubernetes.io/instance: capacitytesting-app-server
    app.kubernetes.io/name: classic-capacitytesting-app-server
    app.kubernetes.io/part-of: support
    app.kubernetes.io/version: zenspider-70-999-d85f0ce4
    branch: unknown
    cicd-toolkit.zende.sk/pipeline: ${ execution.name }
    criticality-tier: tier0
    deploy_id: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
    kube-service-watcher/namespace_suffix: "false"
    product: support
    project: classic
    role: capacitytesting-app-server
    tags.datadoghq.com/env: staging
    tags.datadoghq.com/service: classic-capacitytesting-app-server
    tags.datadoghq.com/version: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
    team: classic-core
    track: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
    version: d85f0ce4f0185f4971afecf68dc7318f4ea128ca
  name: classic-capacitytesting
  namespace: classic
spec:
  ports:
  - name: http
    port: 80
    targetPort: main-port
  selector:
    project: classic
    role: capacitytesting-app-server
